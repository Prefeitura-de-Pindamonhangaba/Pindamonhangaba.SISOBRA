import { pgTable, serial, varchar, char, timestamp, real, smallint, integer } from 'drizzle-orm/pg-core'

// OBRA - usando nomes em minúsculo
export const obra = pgTable('obra', {
  idObra: serial('id_obra').primaryKey(),
  idAlvara: varchar('id_alvara', { length: 15 }),
  dtAlvara: timestamp('dt_alvara'),
  nmObra: varchar('nm_obra', { length: 55 }),
  idTipoLgdr: varchar('id_tipo_lgdr', { length: 10 }),
  nmEndereco: varchar('nm_endereco', { length: 55 }),
  nuEndereco: varchar('nu_endereco', { length: 10 }).default(''),
  complEndereco: varchar('compl_endereco', { length: 10 }).default(''),
  nmBairro: varchar('nm_bairro', { length: 20 }),
  nuCep: varchar('nu_cep', { length: 8 }),
  idMunicipio: varchar('id_municipio', { length: 6 }),
  nmCidade: varchar('nm_cidade', { length: 30 }),
  csUf: char('cs_uf', { length: 2 }),
  teEmail: varchar('te_email', { length: 60 }),
  idTipoLgdrCorr: varchar('id_tipo_lgdr_corr', { length: 10 }),
  nmEnderecoCorr: varchar('nm_endereco_corr', { length: 55 }),
  nuEnderecoCorr: varchar('nu_endereco_corr', { length: 10 }).default(''),
  nmBairroCorr: varchar('nm_bairro_corr', { length: 20 }),
  complEnderecoCorr: varchar('compl_endereco_corr', { length: 10 }).default(''),
  nuCepCorr: varchar('nu_cep_corr', { length: 8 }),
  idMunicipioCorr: varchar('id_municipio_corr', { length: 6 }),
  nuTelefone: varchar('nu_telefone', { length: 14 }),
  nuFax: varchar('nu_fax', { length: 14 }),
  dtAtualizacao: timestamp('dt_atualizacao'),
  inTransmitido: varchar('in_transmitido', { length: 1 }),
  dtTransmissao: timestamp('dt_transmissao'),
  csTipoTx: varchar('cs_tipo_tx', { length: 1 }),
  csSituacao: varchar('cs_situacao', { length: 70 }),
  csClasse: varchar('cs_classe', { length: 10 }),
  idAlvaraAnterior: varchar('id_alvara_anterior', { length: 15 }),
  dtInicio: timestamp('dt_inicio'),
  dtFim: timestamp('dt_fim'),
  nuArtProjeto: varchar('nu_art_projeto', { length: 20 }),
  nuArtObra: varchar('nu_art_obra', { length: 20 }),
  nmEngenheiro: varchar('nm_engenheiro', { length: 55 }),
  nuIndFiscal: varchar('nu_ind_fiscal', { length: 15 }),
  nuProcesso: varchar('nu_processo', { length: 25 }),
  txEspecObra: varchar('tx_espec_obra', { length: 4096 }),
  txObs: varchar('tx_obs', { length: 4096 }),
  csUfCorr: char('cs_uf_corr', { length: 2 }),
  csTipRespSol: char('cs_tip_resp_sol', { length: 1 }),
  idResponsavelSol: varchar('id_responsavel_sol', { length: 14 }),
  nmResponsavelSol: varchar('nm_responsavel_sol', { length: 55 }),
  idTipoLgdrSol: varchar('id_tipo_lgdr_sol', { length: 10 }),
  nmEnderecoSol: varchar('nm_endereco_sol', { length: 55 }),
  nuEnderecoSol: varchar('nu_endereco_sol', { length: 10 }),
  complEnderecoSol: varchar('compl_endereco_sol', { length: 10 }),
  nmBairroSol: varchar('nm_bairro_sol', { length: 20 }),
  nuCepSol: varchar('nu_cep_sol', { length: 8 }),
  idMunicipioSol: varchar('id_municipio_sol', { length: 6 }),
  nmCidadeSol: varchar('nm_cidade_sol', { length: 30 }),
  csUfSol: char('cs_uf_sol', { length: 2 }),
  csTipOcupConstr: char('cs_tip_ocup_constr', { length: 1 }).default(' ').notNull(),
  csTipConstrConstr: char('cs_tip_constr_constr', { length: 1 }).default(' ').notNull(),
  vlAreaConstr: real('vl_area_constr'),
  csTipOcupDemol: char('cs_tip_ocup_demol', { length: 1 }).default(' ').notNull(),
  csTipConstrDemol: char('cs_tip_constr_demol', { length: 1 }).default(' ').notNull(),
  vlAreaDemol: real('vl_area_demol'),
  csTipOcupAcres: char('cs_tip_ocup_acres', { length: 1 }).default(' ').notNull(),
  csTipConstrAcres: char('cs_tip_constr_acres', { length: 1 }).default(' ').notNull(),
  vlAreaAcres: real('vl_area_acres'),
  vlAreaExistente: real('vl_area_existente'),
  csTipOcupRefor: char('cs_tip_ocup_refor', { length: 1 }).default(' ').notNull(),
  csTipConstrRefor: char('cs_tip_constr_refor', { length: 1 }).default(' ').notNull(),
  vlAreaRefor: real('vl_area_refor'),
  nmEngenheiroProj: varchar('nm_engenheiro_proj', { length: 55 }),
  creaEngenheiro: varchar('crea_engenheiro', { length: 20 }),
  creaEngenheiroProj: varchar('crea_engenheiro_proj', { length: 20 }),
  usuario: varchar('usuario', { length: 8 }),
  dtEmissaoAlvara: timestamp('dt_emissao_alvara'),
  nuPavimento: smallint('nu_pavimento'),
  nuUnidade: smallint('nu_unidade'),
  nuDddTel: varchar('nu_ddd_tel', { length: 4 }),
  nuDddFax: varchar('nu_ddd_fax', { length: 4 }),
})

// HABITESE - usando nomes em minúsculo
export const habitese = pgTable('habitese', {
  idHabitese: varchar('id_habitese', { length: 15 }),
  dtHabitese: timestamp('dt_habitese'),
  idObra: integer('id_obra').references(() => obra.idObra, { onDelete: 'cascade' }),
  area: real('area'),
  sequencialHabitese: smallint('sequencial_habitese').notNull(),
  csTipHabitese: varchar('cs_tip_habitese', { length: 1 }).default('P').notNull(),
  usuarioHabitese: varchar('usuario_habitese', { length: 8 }),
  dtEmissaoHabitese: timestamp('dt_emissao_habitese'),
  txObs: varchar('tx_obs', { length: 4096 }),
})
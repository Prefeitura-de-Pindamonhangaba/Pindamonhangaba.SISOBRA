--
-- Script SQL para criação do banco de dados Sisobra no PostgreSQL
-- Adaptado de um DDL Firebird.
--

-- É uma boa prática dropar as tabelas na ordem inversa de suas dependências
-- ou usar "DROP TABLE IF EXISTS <nome_tabela> CASCADE;" para evitar erros.
-- Para este script de criação, vamos apenas criar as tabelas.

-- Usuários e Vinculo devem vir antes de Obra e Responsavel se eles tiverem FK para eles,
-- mas pelo DDL não parece ser o caso.

-- Sequência de criação:
-- 1. Tabelas sem dependências ou que suas dependências serão criadas depois.
-- 2. Adição de chaves estrangeiras, se não foram definidas inline.

-- TAB_COD_DIV definição
CREATE TABLE TAB_COD_DIV (
    CS_TAB VARCHAR(2) NOT NULL,
    CS_ELEM VARCHAR(9) NOT NULL,
    NM_ELEM VARCHAR(70),
    CT_OCORR INTEGER,
    CONSTRAINT PK_TAB_COD_DIV PRIMARY KEY (CS_TAB, CS_ELEM)
);
-- CREATE UNIQUE INDEX RDB$PRIMARY332 ON TAB_COD_DIV (CS_TAB,CS_ELEM); -- Removido, PK já cria índice único

-- TAB_MUNI definição
CREATE TABLE TAB_MUNI (
    ID_MUNIC VARCHAR(6) NOT NULL,
    NM_MUNIC VARCHAR(30),
    ID_REGIAO VARCHAR(2),
    CONSTRAINT PK_TAB_MUNI PRIMARY KEY (ID_MUNIC)
);
-- CREATE UNIQUE INDEX RDB$PRIMARY316 ON TAB_MUNI (ID_MUNIC); -- Removido, PK já cria índice único

-- TAB_SAT definição
CREATE TABLE TAB_SAT (
    CS_SAT VARCHAR(7) NOT NULL,
    NM_SAT VARCHAR(70),
    CONSTRAINT PK_TAB_SAT PRIMARY KEY (CS_SAT)
);
-- CREATE UNIQUE INDEX RDB$PRIMARY315 ON TAB_SAT (CS_SAT); -- Removido, PK já cria índice único

-- TAB_CEP definição
CREATE TABLE TAB_CEP (
    NU_CEP VARCHAR(8) NOT NULL,
    ID_TIPO_LOGR VARCHAR(10),
    TE_DESCRICAO_CEP VARCHAR(70),
    NM_BAIRRO VARCHAR(60),
    SG_UF VARCHAR(2),
    ID_MUNI_PREV VARCHAR(5),
    CONSTRAINT PK_TAB_CEP PRIMARY KEY (NU_CEP)
);
CREATE INDEX IDX_CEPS ON TAB_CEP (NU_CEP);
CREATE INDEX IDX_CEPS_LOGR ON TAB_CEP (TE_DESCRICAO_CEP);
CREATE INDEX IDX_CEPS_MUNIC ON TAB_CEP (ID_MUNI_PREV);
-- CREATE UNIQUE INDEX RDB$PRIMARY334 ON TAB_CEP (NU_CEP); -- Removido, PK já cria índice único

-- TAB_UO_INSS definição
CREATE TABLE TAB_UO_INSS (
    ID_UO_INSS VARCHAR(8) NOT NULL,
    NM_GRAF VARCHAR(30),
    NM_LGRD_GR VARCHAR(55),
    NM_BAIR_GR VARCHAR(20),
    NM_CID_GR VARCHAR(30),
    CS_UF_GR VARCHAR(2),
    NU_CEP_GR VARCHAR(8),
    NU_TEL_GR VARCHAR(14),
    NU_FAX_GR VARCHAR(14),
    NM_GERENTE VARCHAR(40),
    INATIVA VARCHAR(1),
    INTERNA VARCHAR(1),
    ID_GRAF VARCHAR(5),
    ID_PAF VARCHAR(3),
    ID_UO_ANT VARCHAR(8),
    CONSTRAINT PK_TAB_UO_INSS PRIMARY KEY (ID_UO_INSS)
);
CREATE INDEX CADGRAF_IDX ON TAB_UO_INSS (ID_UO_INSS);
-- CREATE UNIQUE INDEX RDB$PRIMARY312 ON TAB_UO_INSS (ID_UO_INSS); -- Removido, PK já cria índice único

-- PREFEITURA definição
CREATE TABLE PREFEITURA (
    ID_PREFEITURA VARCHAR(14) NOT NULL,
    CODIGO VARCHAR(14),
    NM_PREFEITURA VARCHAR(55),
    NM_ENDERECO VARCHAR(55),
    NU_ENDERECO VARCHAR(10) DEFAULT '', -- Corrigido DEFAULT DEFAULT
    COMPL_ENDERECO VARCHAR(10) DEFAULT '', -- Corrigido DEFAULT DEFAULT
    NM_BAIRRO VARCHAR(20),
    NU_CEP VARCHAR(8),
    ID_MUNICIPIO VARCHAR(6),
    NM_CIDADE VARCHAR(30),
    CS_UF CHAR(2),
    NU_TELEFONE VARCHAR(14),
    TE_EMAIL VARCHAR(60),
    ID_DEPARTAMENTO VARCHAR(55),
    CS_SEQ_ALVARA VARCHAR(1) DEFAULT 'F',
    CS_SEQ_HABITESE VARCHAR(1) DEFAULT 'F',
    CONSTRAINT PK_PREFEITURA PRIMARY KEY (ID_PREFEITURA)
);
-- CREATE UNIQUE INDEX RDB$PRIMARY1 ON PREFEITURA (ID_PREFEITURA); -- Removido, PK já cria índice único

-- RESPONSAVEL definição
CREATE TABLE RESPONSAVEL (
    CS_TIP_RESP CHAR(1),
    ID_RESPONSAVEL VARCHAR(14) NOT NULL,
    NM_RESPONSAVEL VARCHAR(55),
    ID_TIPO_LGDR VARCHAR(10),
    NM_ENDERECO VARCHAR(55),
    NU_ENDERECO VARCHAR(10) DEFAULT '', -- Corrigido DEFAULT DEFAULT
    COMPL_ENDERECO VARCHAR(10) DEFAULT '', -- Corrigido DEFAULT DEFAULT
    NM_BAIRRO VARCHAR(20),
    NU_CEP VARCHAR(8),
    ID_MUNICIPIO VARCHAR(6),
    NM_CIDADE VARCHAR(30),
    CS_UF CHAR(2),
    ID_TIPO_LGDR_CORR VARCHAR(10),
    NM_ENDERECO_CORR VARCHAR(55),
    NU_ENDERECO_CORR VARCHAR(10) DEFAULT '', -- Corrigido DEFAULT DEFAULT
    COMPL_ENDERECO_CORR VARCHAR(10) DEFAULT '', -- Corrigido DEFAULT DEFAULT
    NM_BAIRRO_CORR VARCHAR(20),
    NU_CEP_CORR VARCHAR(8),
    ID_MUNICIPIO_CORR VARCHAR(6),
    NM_CIDADE_CORR VARCHAR(30),
    NU_TELEFONE VARCHAR(14),
    NU_FAX VARCHAR(14),
    TE_EMAIL VARCHAR(60),
    DT_ATUALIZACAO TIMESTAMP,
    CS_UF_CORR CHAR(2),
    NU_DDD_TEL VARCHAR(4),
    NU_DDD_FAX VARCHAR(4),
    CONSTRAINT PK_RESPONSAVEL PRIMARY KEY (ID_RESPONSAVEL)
);
-- CREATE UNIQUE INDEX RDB$PRIMARY23 ON RESPONSAVEL (ID_RESPONSAVEL); -- Removido, PK já cria índice único

-- SISOBRA_INI definição (não possui PK ou FKs no DDL fornecido)
CREATE TABLE SISOBRA_INI (
    ID_ITEM VARCHAR(20),
    TX_DESCRICAO VARCHAR(80)
);

-- USUARIOS definição
CREATE TABLE USUARIOS (
    ID_USUARIO VARCHAR(8) NOT NULL,
    ID_PASS VARCHAR(8) NOT NULL,
    TX_NOME VARCHAR(55),
    TX_EMAIL VARCHAR(60),
    CS_ACESSO INTEGER DEFAULT 1 NOT NULL,
    DT_ATUALIZACAO TIMESTAMP,
    CONSTRAINT INTEG_56 PRIMARY KEY (ID_USUARIO)
);
-- CREATE UNIQUE INDEX RDB$PRIMARY20 ON USUARIOS (ID_USUARIO); -- Removido, PK já cria índice único


-- OBRA definição
CREATE TABLE OBRA (
    ID_OBRA SERIAL PRIMARY KEY, -- Alterado de INTEGER para SERIAL para autoincremento
    ID_ALVARA VARCHAR(15),
    DT_ALVARA TIMESTAMP,
    NM_OBRA VARCHAR(55),
    ID_TIPO_LGDR VARCHAR(10),
    NM_ENDERECO VARCHAR(55),
    NU_ENDERECO VARCHAR(10) DEFAULT '', -- Corrigido DEFAULT DEFAULT
    COMPL_ENDERECO VARCHAR(10) DEFAULT '', -- Corrigido DEFAULT DEFAULT
    NM_BAIRRO VARCHAR(20),
    NU_CEP VARCHAR(8),
    ID_MUNICIPIO VARCHAR(6),
    NM_CIDADE VARCHAR(30),
    CS_UF CHAR(2),
    TE_EMAIL VARCHAR(60),
    ID_TIPO_LGDR_CORR VARCHAR(10),
    NM_ENDERECO_CORR VARCHAR(55),
    NU_ENDERECO_CORR VARCHAR(10) DEFAULT '', -- Corrigido DEFAULT DEFAULT
    NM_BAIRRO_CORR VARCHAR(20),
    COMPL_ENDERECO_CORR VARCHAR(10) DEFAULT '', -- Corrigido DEFAULT DEFAULT
    NU_CEP_CORR VARCHAR(8),
    ID_MUNICIPIO_CORR VARCHAR(6),
    NU_TELEFONE VARCHAR(14),
    NU_FAX VARCHAR(14),
    DT_ATUALIZACAO TIMESTAMP,
    IN_TRANSMITIDO VARCHAR(1),
    DT_TRANSMISSAO TIMESTAMP,
    CS_TIPO_TX VARCHAR(1),
    CS_SITUACAO VARCHAR(70),
    CS_CLASSE VARCHAR(10),
    ID_ALVARA_ANTERIOR VARCHAR(15),
    DT_INICIO TIMESTAMP,
    DT_FIM TIMESTAMP,
    NU_ART_PROJETO VARCHAR(20),
    NU_ART_OBRA VARCHAR(20),
    NM_ENGENHEIRO VARCHAR(55),
    NU_IND_FISCAL VARCHAR(15),
    NU_PROCESSO VARCHAR(25),
    TX_ESPEC_OBRA VARCHAR(4096),
    TX_OBS VARCHAR(4096),
    CS_UF_CORR CHAR(2),
    CS_TIP_RESP_SOL CHAR(1),
    ID_RESPONSAVEL_SOL VARCHAR(14),
    NM_RESPONSAVEL_SOL VARCHAR(55),
    ID_TIPO_LGDR_SOL VARCHAR(10),
    NM_ENDERECO_SOL VARCHAR(55),
    NU_ENDERECO_SOL VARCHAR(10),
    COMPL_ENDERECO_SOL VARCHAR(10),
    NM_BAIRRO_SOL VARCHAR(20),
    NU_CEP_SOL VARCHAR(8),
    ID_MUNICIPIO_SOL VARCHAR(6),
    NM_CIDADE_SOL VARCHAR(30),
    CS_UF_SOL CHAR(2),
    CS_TIP_OCUP_CONSTR CHAR(1) DEFAULT ' ' NOT NULL,
    CS_TIP_CONSTR_CONSTR CHAR(1) DEFAULT ' ' NOT NULL,
    VL_AREA_CONSTR REAL, -- Alterado de FLOAT para REAL (sinônimo de FLOAT no PostgreSQL, mas mais claro)
    CS_TIP_OCUP_DEMOL CHAR(1) DEFAULT ' ' NOT NULL,
    CS_TIP_CONSTR_DEMOL CHAR(1) DEFAULT ' ' NOT NULL,
    VL_AREA_DEMOL REAL, -- Alterado de FLOAT para REAL
    CS_TIP_OCUP_ACRES CHAR(1) DEFAULT ' ' NOT NULL,
    CS_TIP_CONSTR_ACRES CHAR(1) DEFAULT ' ' NOT NULL,
    VL_AREA_ACRES REAL, -- Alterado de FLOAT para REAL
    VL_AREA_EXISTENTE REAL, -- Alterado de FLOAT para REAL
    CS_TIP_OCUP_REFOR CHAR(1) DEFAULT ' ' NOT NULL,
    CS_TIP_CONSTR_REFOR CHAR(1) DEFAULT ' ' NOT NULL,
    VL_AREA_REFOR REAL, -- Alterado de FLOAT para REAL
    NM_ENGENHEIRO_PROJ VARCHAR(55),
    CREA_ENGENHEIRO VARCHAR(20),
    CREA_ENGENHEIRO_PROJ VARCHAR(20),
    USUARIO VARCHAR(8),
    DT_EMISSAO_ALVARA TIMESTAMP,
    NU_PAVIMENTO SMALLINT,
    NU_UNIDADE SMALLINT,
    NU_DDD_TEL VARCHAR(4),
    NU_DDD_FAX VARCHAR(4)
    -- CONSTRAINT PK_OBRA PRIMARY KEY (ID_OBRA) -- Removido, já embutido no SERIAL PRIMARY KEY
);
-- CREATE UNIQUE INDEX RDB$PRIMARY27 ON OBRA (ID_OBRA); -- Removido, SERIAL PRIMARY KEY já cria índice único

-- VINCULO definição
CREATE TABLE VINCULO (
    ID_RESPONSAVEL VARCHAR(14) NOT NULL,
    ID_OBRA INTEGER NOT NULL,
    CS_TIPO_RESPONSAVEL CHAR(1),
    DT_INICIO_PERIODO TIMESTAMP NOT NULL,
    DT_FIM_PERIODO TIMESTAMP,
    TP_QUALIFIC_INSS VARCHAR(2) NOT NULL,
    DT_ATUALIZACAO TIMESTAMP,
    SEQ_VINC SMALLINT,
    IN_TRANSMITIDO VARCHAR(1)
);
CREATE INDEX RDB$FOREIGN39 ON VINCULO (ID_RESPONSAVEL);
CREATE INDEX RDB$FOREIGN40 ON VINCULO (ID_OBRA);


-- HABITESE definição
CREATE TABLE HABITESE (
    ID_HABITESE VARCHAR(15),
    DT_HABITESE TIMESTAMP,
    ID_OBRA INTEGER,
    AREA REAL, -- Alterado de FLOAT para REAL
    SEQUENCIAL_HABITESE SMALLINT NOT NULL,
    CS_TIP_HABITESE VARCHAR(1) DEFAULT 'P' NOT NULL,
    USUARIO_HABITESE VARCHAR(8),
    DT_EMISSAO_HABITESE TIMESTAMP,
    TX_OBS VARCHAR(4096),
    CONSTRAINT FK_HABITESE FOREIGN KEY (ID_OBRA) REFERENCES OBRA(ID_OBRA) ON DELETE CASCADE
);
CREATE INDEX RDB$FOREIGN38 ON HABITESE (ID_OBRA);


--
-- Adição de Chaves Estrangeiras pendentes para VINCULO
-- Note que o DDL original não definiu essas FKs, apenas os índices.
-- Se houver FKs de OBRA e RESPONSAVEL em VINCULO, elas devem ser adicionadas aqui.
-- Assumindo que RDB$FOREIGN39 e RDB$FOREIGN40 indicam FKs:
--

ALTER TABLE VINCULO
ADD CONSTRAINT FK_VINCULO_RESPONSAVEL
FOREIGN KEY (ID_RESPONSAVEL) REFERENCES RESPONSAVEL(ID_RESPONSAVEL)
ON DELETE RESTRICT ON UPDATE CASCADE; -- Exemplo: RESTRICT para DELETE, CASCADE para UPDATE

ALTER TABLE VINCULO
ADD CONSTRAINT FK_VINCULO_OBRA
FOREIGN KEY (ID_OBRA) REFERENCES OBRA(ID_OBRA)
ON DELETE CASCADE ON UPDATE CASCADE; -- Exemplo: CASCADE para DELETE, CASCADE para UPDATE

--
-- Adição de Chaves Estrangeiras adicionais se existirem
-- (Não explicitadas no DDL fornecido, mas comuns em sistemas como este)
-- Por exemplo, FKs de OBRA para TAB_MUNI, TAB_CEP, etc.
--

-- Exemplo: Se ID_MUNICIPIO na tabela OBRA referencia TAB_MUNI
-- ALTER TABLE OBRA
-- ADD CONSTRAINT FK_OBRA_MUNICIPIO
-- FOREIGN KEY (ID_MUNICIPIO) REFERENCES TAB_MUNI(ID_MUNIC)
-- ON DELETE RESTRICT ON UPDATE CASCADE;

-- Exemplo: Se NU_CEP na tabela OBRA referencia TAB_CEP
-- ALTER TABLE OBRA
-- ADD CONSTRAINT FK_OBRA_CEP
-- FOREIGN KEY (NU_CEP) REFERENCES TAB_CEP(NU_CEP)
-- ON DELETE RESTRICT ON UPDATE CASCADE;

-- Adicione outras chaves estrangeiras que podem ser inferidas do nome das colunas,
-- como ID_MUNICIPIO_CORR, ID_MUNICIPIO_SOL, CS_UF, CS_UF_CORR, CS_UF_SOL
-- se elas referenciarem TAB_MUNI ou outras tabelas de domínio.